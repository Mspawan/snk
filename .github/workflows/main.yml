name: main

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - run: bun install --frozen-lockfile

      - run: npm run type
      - run: npm run lint
      - run: bun test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: update action.yml to use image from local Dockerfile
        run: |
          sed -i "s|image: .*|image: Dockerfile|" action.yml

      - name: generate snake game (docker version)
        id: generate-snake
        uses: ./
        with:
          github_user_name: platane
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake-ocean.svg?color_snake=orange&color_dots=#dadcdf94,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
            dist/github-contribution-grid-snake-grey.svg?color_snake=111&color_dots=#eee,#aaa,#888,#666,#444
            dist/github-contribution-grid-snake.gif
            dist/github-contribution-grid-snake-ocean.gif?color_snake=orange&color_dots=#dadcdf94,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

      - name: ensure generated files exist
        run: |
          ls dist
          test -f dist/github-contribution-grid-snake.svg
          test -f dist/github-contribution-grid-snake-dark.svg
          test -f dist/github-contribution-grid-snake-ocean.svg
          test -f dist/github-contribution-grid-snake-grey.svg
          test -f dist/github-contribution-grid-snake.gif
          test -f dist/github-contribution-grid-snake-ocean.gif

      - uses: crazy-max/ghaction-github-pages@v4.1.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-action-svg-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - run: bun install --frozen-lockfile

      - name: build svg-only action
        run: |
          npm run build:action
          rm -rf svg-only/dist
          mv packages/action/dist svg-only/dist

      - name: generate snake game (svg-only version)
        id: generate-snake
        uses: ./svg-only
        with:
          github_user_name: platane
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake-ocean.svg?color_snake=orange&color_dots=#dadcdf94,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
            dist/github-contribution-grid-snake-grey.svg?color_snake=111&color_dots=#eee,#aaa,#888,#666,#444

      - name: ensure generated files exist
        run: |
          ls dist
          test -f dist/github-contribution-grid-snake.svg
          test -f dist/github-contribution-grid-snake-dark.svg
          test -f dist/github-contribution-grid-snake-ocean.svg
          test -f dist/github-contribution-grid-snake-grey.svg

      - uses: crazy-max/ghaction-github-pages@v4.1.0
        with:
          target_branch: output-svg-only
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-ghpages:
    runs-on: ubuntu-latest
    permissions:
      contents: read      # checkout
      pages: write        # for deploy-pages
      id-token: write     # for deploy-pages OIDC
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - run: bun install --frozen-lockfile

      - name: build demo site
        run: npm run build:demo
        env:
          GITHUB_USER_CONTRIBUTION_API_ENDPOINT: https://github-user-contribution.platane.workers.dev/github-user-contribution/

      - name: upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/demo/dist

      - name: deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        if: success() && github.ref == 'refs/heads/main'

      - name: deploy to Cloudflare Workers
        run: bunx wrangler deploy
        if: success() && github.ref == 'refs/heads/main'
        working-directory: packages/github-user-contribution-service
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
